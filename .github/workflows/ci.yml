
name: CI
on:
  push:
    branches:
      - master
      - main
    tags: '*'
  pull_request:
    branches:
      - master
      - main
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        version:
          - '1.6' # LTS
          - '1' # expands to latest 1.x.y release
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Develop packages from monorepo
        shell: julia --project=monorepo {0}
        run: |
          # code based on github.com/JuliaPlots/Makie.jl.git
          using Pkg;
          pkg"registry add https://github.com/JuliaRegistries/General"
          pkg"registry add https://gitlab.com/greimel/GreimelRegistry"
          # dev monorepo packages
          pkg"dev ./QuantEconAPI ./DiscreteRVs ./MarkovChainsX ./DiscreteDPs ."
      - name: Run the tests
        continue-on-error: true
        run: >
          DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --color=yes --project=monorepo -e 'using Pkg; Pkg.test("QuantEconX", coverage=true)'
          && echo "TESTS_SUCCESSFUL=true" >> $GITHUB_ENV
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
